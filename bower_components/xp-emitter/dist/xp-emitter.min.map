{"version":3,"sources":["../browserify/node_modules/browser-pack/_prelude.js","index","lib/index.js","node_modules/eventemitter3/index.js"],"names":["global","eventemitter3","require","XP","module","exports","Class","extends","window","EE","fn","context","once","this","EventEmitter","prototype","_events","undefined","listeners","event","i","l","length","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","call","apply","j","on","listener","push","events","removeAllListeners","off","addListener","setMaxListeners","EventEmitter2","EventEmitter3"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=require(\"./lib\");","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var eventemitter3 = require('eventemitter3'),\r\n        XP            = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * This class is used to provide event emitting functionalities.\r\n     *\r\n     * @class XPEmitter\r\n     * @description This class is used to provide event emitting functionalities\r\n     */\r\n    module.exports = new XP.Class('XPEmitter', {\r\n\r\n        // EXTENDS\r\n        extends: eventemitter3\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","'use strict';\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  if (!this._events || !this._events[event]) return [];\n  if (this._events[event].fn) return [this._events[event].fn];\n\n  for (var i = 0, l = this._events[event].length, ee = new Array(l); i < l; i++) {\n    ee[i] = this._events[event][i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  if (!this._events || !this._events[event]) return false;\n\n  var listeners = this._events[event]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, once) {\n  if (!this._events || !this._events[event]) return this;\n\n  var listeners = this._events[event]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn && (listeners.fn !== fn || (once && !listeners.once))) {\n      events.push(listeners);\n    }\n    if (!listeners.fn) for (var i = 0, length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || (once && !listeners[i].once)) {\n        events.push(listeners[i]);\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[event] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[event];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[event];\n  else this._events = {};\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the module.\n//\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.EventEmitter2 = EventEmitter;\nEventEmitter.EventEmitter3 = EventEmitter;\n\n//\n// Expose the module.\n//\nmodule.exports = EventEmitter;\n"]}
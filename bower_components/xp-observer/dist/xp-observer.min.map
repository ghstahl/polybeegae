{"version":3,"sources":["../browserify/node_modules/browser-pack/_prelude.js","index","lib/index.js","node_modules/observe-js/src/observe.js"],"names":["global","XP","require","Observer","ObjectObserver","module","exports","Class","initialize","value","callback","deep","assertArgument","isObservable","isFunction","self","this","_observers","_addObserver","disconnect","_disconnectObserver","_observer","undefined","enumerable","wrapper","isVoid","_isObserved","includes","_connectObserver","push","forEach","sub","observer","isObject","_getObserved","added","removed","changed","getOld","key","_removeObserver","open","isInstance","close","value_","_getObserver","find","includesDeep","pull","set","val","validate","isArray","window","detectObjectObserve","recs","records","Object","observe","Array","test","arr","id","length","deliverChangeRecords","type","unobserve","detectEval","chrome","app","runtime","navigator","getDeviceStorage","f","Function","ex","isIndex","s","toNumber","obj","areSameValue","left","right","numberIsNaN","getPathCharType","char","code","charCodeAt","noop","parsePath","path","maybeUnescapeQuote","index","nextChar","mode","newChar","actions","append","c","transition","action","typeMap","keys","pathStateMachine","isIdent","identRegExp","Path","parts","privateToken","constructorIsPrivate","Error","i","String","hasEval","getValueFrom","compiledGetValueFromFn","getPath","pathString","pathCache","invalidPath","formatAccessor","replace","dirtyCheck","cycles","MAX_DIRTY_CHECK_CYCLES","check_","testingExposeCycleCount","dirtyCheckCycleCount","objectIsEmpty","object","prop","diffIsEmpty","diff","diffObjectFromOldObject","oldObject","newValue","runEOMTasks","eomTasks","newObservedObject","state_","OPENED","discardRecords","first","obs","arrayObserve","deliver","discard","observedObjectCache","getObservedObject","dir","pop","newObservedSet","rootObj","rootObjProps","objects","indexOf","getPrototypeOf","allRootObjNonObservedProps","rec","name","observers","iterateObjects_","observerCount","record",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":16640,"endcol":20,"endline":655,"pos":16630,"col":10,"line":655,"value":"rootObject","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":16640,"endcol":20,"endline":655,"pos":16630,"col":10,"line":655,"value":"rootObject","type":"name"},"name":"rootObject"},"rootObject","unobservedCount","observedSetCache","lastObservedSet","getObservedSet","UNOPENED","callback_","target_","directObserver_","id_","nextObserverId","addToAll","_allObserversCount","collectObservers","allObservers","removeFromAll","call","oldObject_","ArrayObserver","array","PathObserver","object_","path_","CompoundObserver","reportChangesOnOpen","reportChangesOnOpen_","observed_","identFn","ObserverTransform","observable","getValueFn","setValueFn","dontPassThroughSet","observable_","getValueFn_","setValueFn_","dontPassThroughSet_","diffObjectFromChangeRecords","changeRecords","oldValues","expectedRecordTypes","oldValue","console","error","newSplice","addedCount","ArraySplice","calcSplices","current","currentStart","currentEnd","old","oldStart","oldEnd","arraySplice","intersect","start1","end1","start2","end2","mergeSplice","splices","splice","inserted","insertionOffset","intersectCount","deleteCount","prepend","slice","prototype","apply","offset","createInitialSplices","JSON","stringify","projectArraySplices","concat","hasObserve","Number","isNaN","createObject","proto","__proto__","newObject","create","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","identStart","identPart","RegExp","beforePath","ws","ident","[","eof","inPath",".","beforeIdent","inIdent","0","number","beforeElement","'","\"","afterZero","]","inIndex","inSingleQuote","else","inDoubleQuote","afterElement","get","valid","toString","directObserver","iterateObjects","str","setValueFrom","runEOM","fn","Promise","resolve","then","CLOSED","RESETTING","target","connect_","disconnect_","report_","changes","_errorThrownDuringCallback","stack","discardChanges","runningMicrotaskCheckpoint","Platform","performMicrotaskCheckpoint","anyChanged","toCheck","clearObservers","copyObject","copy","skipChanges","property","applySplices","previous","spliceArgs","addIndex","setValue","observerSentinel","needsDirectObserver","addPath","addObserver","startReset","finishReset","observedCallback_","add","update","delete","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcEditDistances","rowCount","columnCount","distances","j","equals","north","west","spliceOperationsFromEditDistances","edits","min","northWest","reverse","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","ops","oldIndex","searchLength","index1","index2","count","calculateSplices","currentValue","previousValue","expose","nodeType","runEOM_","observerSentinel_","hasObjectObserve"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=require(\"./lib\");","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var XP       = global.XP || require('expandjs'),\r\n        Observer = require('observe-js').ObjectObserver;\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * This class is used to provide object observing functionality.\r\n     *\r\n     * @class XPObserver\r\n     * @description This class is used to provide object observing functionality\r\n     */\r\n    module.exports = new XP.Class('XPObserver', {\r\n\r\n        /**\r\n         * @constructs\r\n         * @param {Array | Function | Object} value\r\n         * @param {Function} callback\r\n         * @param {boolean} [deep = false]\r\n         */\r\n        initialize: function (value, callback, deep) {\r\n\r\n            // Asserting\r\n            XP.assertArgument(XP.isObservable(value), 1, 'Array, Function or Object');\r\n            XP.assertArgument(XP.isFunction(callback), 2, 'Function');\r\n\r\n            // Vars\r\n            var self = this;\r\n\r\n            // Setting\r\n            self.value      = value;\r\n            self.callback   = callback;\r\n            self.deep       = deep;\r\n            self._observers = [];\r\n\r\n            // Observing\r\n            self._addObserver(self.value);\r\n\r\n            return self;\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * Disconnects the observer\r\n         *\r\n         * @method disconnect\r\n         * @returns {Object}\r\n         */\r\n        disconnect: function () {\r\n            return this._disconnectObserver(this._observer) ? this : undefined;\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * Adds the observer for value\r\n         *\r\n         * @method _addObserver\r\n         * @param {Array | Function | Object} value\r\n         * @param {Array | Function | Object} [wrapper]\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _addObserver: {\r\n            enumerable: false,\r\n            value: function (value, wrapper) {\r\n\r\n                // Asserting\r\n                XP.assertArgument(XP.isObservable(value), 1, 'Array, Function or Object');\r\n                XP.assertArgument(XP.isVoid(wrapper) || XP.isObservable(wrapper), 2, 'Array, Function or Object');\r\n\r\n                // Vars\r\n                var self = this;\r\n\r\n                // Checking\r\n                if ((XP.isObservable(value) && self._isObserved(value)) || (wrapper && !XP.includes(wrapper, value))) { return self; }\r\n\r\n                // Adding\r\n                if (value === self.value) { self._observer = self._connectObserver(new Observer(value)); }\r\n                if (value !== self.value) { self._observers.push(self._connectObserver(new Observer(value))); }\r\n                if (self.deep) { XP.forEach(value, function (sub) { if (XP.isObservable(sub)) { self._addObserver(sub, value); } }); }\r\n\r\n                return self;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Connects an observer\r\n         *\r\n         * @method _connectObserver\r\n         * @param {Object} observer\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _connectObserver: {\r\n            enumerable: false,\r\n            value: function (observer) {\r\n\r\n                // Asserting\r\n                XP.assertArgument(XP.isObject(observer), 1, 'Object');\r\n\r\n                // Vars\r\n                var self     = this,\r\n                    value    = self._getObserved(observer),\r\n                    callback = function (added, removed, changed, getOld) {\r\n\r\n                        // Updating\r\n                        XP.forEach(added, function (sub) { if (XP.isObservable(sub)) { self._addObserver(sub, value); } });\r\n                        XP.forEach(changed, function (sub, key) { if (XP.isObservable(sub)) { self._addObserver(sub, value)._removeObserver(getOld(key)); } });\r\n                        XP.forEach(removed, function (sub, key) { if (XP.isObservable(getOld(key))) { self._removeObserver(getOld(key)); } });\r\n\r\n                        return self.callback(self.value);\r\n                    };\r\n\r\n                // Connecting\r\n                if (value) { observer.open(callback); } else { return observer; }\r\n                if (observer === self._observer) { self._observers.forEach(function (observer) { observer.open(callback); }); }\r\n\r\n                return observer;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disconnects an observer\r\n         *\r\n         * @method _disconnectObserver\r\n         * @param {Object} observer\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _disconnectObserver: {\r\n            enumerable: false,\r\n            value: function (observer) {\r\n\r\n                // Asserting\r\n                XP.assertArgument(XP.isObject(observer), 1, 'Object');\r\n\r\n                // Vars\r\n                var self = this;\r\n\r\n                // Disconnecting\r\n                if (XP.isInstance(observer, Observer)) { observer.close(); } else { return observer; }\r\n                if (observer === self._observer) { self._observers.forEach(function (observer) { observer.close(); }); }\r\n\r\n                return observer;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the value of observer\r\n         *\r\n         * @method _getObserved\r\n         * @param {Object} observer\r\n         * @returns {Array | Object}\r\n         * @private\r\n         */\r\n        _getObserved: {\r\n            enumerable: false,\r\n            value: function (observer) {\r\n                XP.assertArgument(XP.isObject(observer), 1, 'Object');\r\n                return observer.value_;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns the observer of value\r\n         *\r\n         * @method _getObserver\r\n         * @param {Array | Function | Object} value\r\n         * @returns {Object | undefined}\r\n         * @private\r\n         */\r\n        _getObserver: {\r\n            enumerable: false,\r\n            value: function (value) {\r\n                XP.assertArgument(XP.isObservable(value), 1, 'Array, Function or Object');\r\n                return XP.find(this._observers, {value_: value});\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns true if value is observed\r\n         *\r\n         * @method _isObserved\r\n         * @param {Array | Function | Object} value\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        _isObserved: {\r\n            enumerable: false,\r\n            value: function (value) {\r\n                XP.assertArgument(XP.isObservable(value), 1, 'Array, Function or Object');\r\n                return value === this.value ? !!this._observer : !!this._getObserver(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Removes the observer of value\r\n         *\r\n         * @method _removeObserver\r\n         * @param {Array | Function | Object} value\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _removeObserver: {\r\n            enumerable: false,\r\n            value: function (value) {\r\n\r\n                // Asserting\r\n                XP.assertArgument(XP.isObservable(value), 1, 'Array, Function or Object');\r\n\r\n                // Vars\r\n                var self     = this,\r\n                    observer = self._getObserver(value);\r\n\r\n                // Checking\r\n                if (!observer || XP.includesDeep(self.value, value)) { return self; }\r\n\r\n                // Removing\r\n                XP.pull(self._observers, self._disconnectObserver(observer));\r\n                XP.forEach(self.deep ? value : {}, function (sub) { if (XP.isObservable(sub)) { self._removeObserver(sub); } });\r\n\r\n                return self;\r\n            }\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property callback\r\n         * @type Function\r\n         */\r\n        callback: {\r\n            set: function (val) { return XP.isFunction(val) ? function () { return val(); } : null; },\r\n            validate: function (val) { return XP.isFunction(val); }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property deep\r\n         * @type boolean\r\n         */\r\n        deep: {\r\n            set: function (val) { return !!val; }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property value\r\n         * @type Array | Function | Object\r\n         */\r\n        value: {\r\n            set: function (val) { return this.value || val; },\r\n            validate: function (val) { return XP.isObservable(val); }\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property _observer\r\n         * @type Object\r\n         * @private\r\n         */\r\n        _observer: {\r\n            enumerable: false,\r\n            set: function (val) { return this._observer || val; },\r\n            validate: function (val) { return XP.isObject(val); }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property _observers\r\n         * @type Array\r\n         * @private\r\n         */\r\n        _observers: {\r\n            enumerable: false,\r\n            set: function (val) { return this._observers || val; },\r\n            validate: function (val) { return XP.isArray(val); }\r\n        }\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","/*\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n(function(global) {\r\n  'use strict';\r\n\r\n  var testingExposeCycleCount = global.testingExposeCycleCount;\r\n\r\n  // Detect and do basic sanity checking on Object/Array.observe.\r\n  function detectObjectObserve() {\r\n    if (typeof Object.observe !== 'function' ||\r\n        typeof Array.observe !== 'function') {\r\n      return false;\r\n    }\r\n\r\n    var records = [];\r\n\r\n    function callback(recs) {\r\n      records = recs;\r\n    }\r\n\r\n    var test = {};\r\n    var arr = [];\r\n    Object.observe(test, callback);\r\n    Array.observe(arr, callback);\r\n    test.id = 1;\r\n    test.id = 2;\r\n    delete test.id;\r\n    arr.push(1, 2);\r\n    arr.length = 0;\r\n\r\n    Object.deliverChangeRecords(callback);\r\n    if (records.length !== 5)\r\n      return false;\r\n\r\n    if (records[0].type != 'add' ||\r\n        records[1].type != 'update' ||\r\n        records[2].type != 'delete' ||\r\n        records[3].type != 'splice' ||\r\n        records[4].type != 'splice') {\r\n      return false;\r\n    }\r\n\r\n    Object.unobserve(test, callback);\r\n    Array.unobserve(arr, callback);\r\n\r\n    return true;\r\n  }\r\n\r\n  var hasObserve = detectObjectObserve();\r\n\r\n  function detectEval() {\r\n    // Don't test for eval if we're running in a Chrome App environment.\r\n    // We check for APIs set that only exist in a Chrome App context.\r\n    if (typeof chrome !== 'undefined' && chrome.app && chrome.app.runtime) {\r\n      return false;\r\n    }\r\n\r\n    // Firefox OS Apps do not allow eval. This feature detection is very hacky\r\n    // but even if some other platform adds support for this function this code\r\n    // will continue to work.\r\n    if (typeof navigator != 'undefined' && navigator.getDeviceStorage) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      var f = new Function('', 'return true;');\r\n      return f();\r\n    } catch (ex) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var hasEval = detectEval();\r\n\r\n  function isIndex(s) {\r\n    return +s === s >>> 0 && s !== '';\r\n  }\r\n\r\n  function toNumber(s) {\r\n    return +s;\r\n  }\r\n\r\n  function isObject(obj) {\r\n    return obj === Object(obj);\r\n  }\r\n\r\n  var numberIsNaN = global.Number.isNaN || function(value) {\r\n    return typeof value === 'number' && global.isNaN(value);\r\n  }\r\n\r\n  function areSameValue(left, right) {\r\n    if (left === right)\r\n      return left !== 0 || 1 / left === 1 / right;\r\n    if (numberIsNaN(left) && numberIsNaN(right))\r\n      return true;\r\n\r\n    return left !== left && right !== right;\r\n  }\r\n\r\n  var createObject = ('__proto__' in {}) ?\r\n    function(obj) { return obj; } :\r\n    function(obj) {\r\n      var proto = obj.__proto__;\r\n      if (!proto)\r\n        return obj;\r\n      var newObject = Object.create(proto);\r\n      Object.getOwnPropertyNames(obj).forEach(function(name) {\r\n        Object.defineProperty(newObject, name,\r\n                             Object.getOwnPropertyDescriptor(obj, name));\r\n      });\r\n      return newObject;\r\n    };\r\n\r\n  var identStart = '[\\$_a-zA-Z]';\r\n  var identPart = '[\\$_a-zA-Z0-9]';\r\n  var identRegExp = new RegExp('^' + identStart + '+' + identPart + '*' + '$');\r\n\r\n  function getPathCharType(char) {\r\n    if (char === undefined)\r\n      return 'eof';\r\n\r\n    var code = char.charCodeAt(0);\r\n\r\n    switch(code) {\r\n      case 0x5B: // [\r\n      case 0x5D: // ]\r\n      case 0x2E: // .\r\n      case 0x22: // \"\r\n      case 0x27: // '\r\n      case 0x30: // 0\r\n        return char;\r\n\r\n      case 0x5F: // _\r\n      case 0x24: // $\r\n        return 'ident';\r\n\r\n      case 0x20: // Space\r\n      case 0x09: // Tab\r\n      case 0x0A: // Newline\r\n      case 0x0D: // Return\r\n      case 0xA0:  // No-break space\r\n      case 0xFEFF:  // Byte Order Mark\r\n      case 0x2028:  // Line Separator\r\n      case 0x2029:  // Paragraph Separator\r\n        return 'ws';\r\n    }\r\n\r\n    // a-z, A-Z\r\n    if ((0x61 <= code && code <= 0x7A) || (0x41 <= code && code <= 0x5A))\r\n      return 'ident';\r\n\r\n    // 1-9\r\n    if (0x31 <= code && code <= 0x39)\r\n      return 'number';\r\n\r\n    return 'else';\r\n  }\r\n\r\n  var pathStateMachine = {\r\n    'beforePath': {\r\n      'ws': ['beforePath'],\r\n      'ident': ['inIdent', 'append'],\r\n      '[': ['beforeElement'],\r\n      'eof': ['afterPath']\r\n    },\r\n\r\n    'inPath': {\r\n      'ws': ['inPath'],\r\n      '.': ['beforeIdent'],\r\n      '[': ['beforeElement'],\r\n      'eof': ['afterPath']\r\n    },\r\n\r\n    'beforeIdent': {\r\n      'ws': ['beforeIdent'],\r\n      'ident': ['inIdent', 'append']\r\n    },\r\n\r\n    'inIdent': {\r\n      'ident': ['inIdent', 'append'],\r\n      '0': ['inIdent', 'append'],\r\n      'number': ['inIdent', 'append'],\r\n      'ws': ['inPath', 'push'],\r\n      '.': ['beforeIdent', 'push'],\r\n      '[': ['beforeElement', 'push'],\r\n      'eof': ['afterPath', 'push']\r\n    },\r\n\r\n    'beforeElement': {\r\n      'ws': ['beforeElement'],\r\n      '0': ['afterZero', 'append'],\r\n      'number': ['inIndex', 'append'],\r\n      \"'\": ['inSingleQuote', 'append', ''],\r\n      '\"': ['inDoubleQuote', 'append', '']\r\n    },\r\n\r\n    'afterZero': {\r\n      'ws': ['afterElement', 'push'],\r\n      ']': ['inPath', 'push']\r\n    },\r\n\r\n    'inIndex': {\r\n      '0': ['inIndex', 'append'],\r\n      'number': ['inIndex', 'append'],\r\n      'ws': ['afterElement'],\r\n      ']': ['inPath', 'push']\r\n    },\r\n\r\n    'inSingleQuote': {\r\n      \"'\": ['afterElement'],\r\n      'eof': ['error'],\r\n      'else': ['inSingleQuote', 'append']\r\n    },\r\n\r\n    'inDoubleQuote': {\r\n      '\"': ['afterElement'],\r\n      'eof': ['error'],\r\n      'else': ['inDoubleQuote', 'append']\r\n    },\r\n\r\n    'afterElement': {\r\n      'ws': ['afterElement'],\r\n      ']': ['inPath', 'push']\r\n    }\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  function parsePath(path) {\r\n    var keys = [];\r\n    var index = -1;\r\n    var c, newChar, key, type, transition, action, typeMap, mode = 'beforePath';\r\n\r\n    var actions = {\r\n      push: function() {\r\n        if (key === undefined)\r\n          return;\r\n\r\n        keys.push(key);\r\n        key = undefined;\r\n      },\r\n\r\n      append: function() {\r\n        if (key === undefined)\r\n          key = newChar\r\n        else\r\n          key += newChar;\r\n      }\r\n    };\r\n\r\n    function maybeUnescapeQuote() {\r\n      if (index >= path.length)\r\n        return;\r\n\r\n      var nextChar = path[index + 1];\r\n      if ((mode == 'inSingleQuote' && nextChar == \"'\") ||\r\n          (mode == 'inDoubleQuote' && nextChar == '\"')) {\r\n        index++;\r\n        newChar = nextChar;\r\n        actions.append();\r\n        return true;\r\n      }\r\n    }\r\n\r\n    while (mode) {\r\n      index++;\r\n      c = path[index];\r\n\r\n      if (c == '\\\\' && maybeUnescapeQuote(mode))\r\n        continue;\r\n\r\n      type = getPathCharType(c);\r\n      typeMap = pathStateMachine[mode];\r\n      transition = typeMap[type] || typeMap['else'] || 'error';\r\n\r\n      if (transition == 'error')\r\n        return; // parse error;\r\n\r\n      mode = transition[0];\r\n      action = actions[transition[1]] || noop;\r\n      newChar = transition[2] === undefined ? c : transition[2];\r\n      action();\r\n\r\n      if (mode === 'afterPath') {\r\n        return keys;\r\n      }\r\n    }\r\n\r\n    return; // parse error\r\n  }\r\n\r\n  function isIdent(s) {\r\n    return identRegExp.test(s);\r\n  }\r\n\r\n  var constructorIsPrivate = {};\r\n\r\n  function Path(parts, privateToken) {\r\n    if (privateToken !== constructorIsPrivate)\r\n      throw Error('Use Path.get to retrieve path objects');\r\n\r\n    for (var i = 0; i < parts.length; i++) {\r\n      this.push(String(parts[i]));\r\n    }\r\n\r\n    if (hasEval && this.length) {\r\n      this.getValueFrom = this.compiledGetValueFromFn();\r\n    }\r\n  }\r\n\r\n  // TODO(rafaelw): Make simple LRU cache\r\n  var pathCache = {};\r\n\r\n  function getPath(pathString) {\r\n    if (pathString instanceof Path)\r\n      return pathString;\r\n\r\n    if (pathString == null || pathString.length == 0)\r\n      pathString = '';\r\n\r\n    if (typeof pathString != 'string') {\r\n      if (isIndex(pathString.length)) {\r\n        // Constructed with array-like (pre-parsed) keys\r\n        return new Path(pathString, constructorIsPrivate);\r\n      }\r\n\r\n      pathString = String(pathString);\r\n    }\r\n\r\n    var path = pathCache[pathString];\r\n    if (path)\r\n      return path;\r\n\r\n    var parts = parsePath(pathString);\r\n    if (!parts)\r\n      return invalidPath;\r\n\r\n    var path = new Path(parts, constructorIsPrivate);\r\n    pathCache[pathString] = path;\r\n    return path;\r\n  }\r\n\r\n  Path.get = getPath;\r\n\r\n  function formatAccessor(key) {\r\n    if (isIndex(key)) {\r\n      return '[' + key + ']';\r\n    } else {\r\n      return '[\"' + key.replace(/\"/g, '\\\\\"') + '\"]';\r\n    }\r\n  }\r\n\r\n  Path.prototype = createObject({\r\n    __proto__: [],\r\n    valid: true,\r\n\r\n    toString: function() {\r\n      var pathString = '';\r\n      for (var i = 0; i < this.length; i++) {\r\n        var key = this[i];\r\n        if (isIdent(key)) {\r\n          pathString += i ? '.' + key : key;\r\n        } else {\r\n          pathString += formatAccessor(key);\r\n        }\r\n      }\r\n\r\n      return pathString;\r\n    },\r\n\r\n    getValueFrom: function(obj, directObserver) {\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (obj == null)\r\n          return;\r\n        obj = obj[this[i]];\r\n      }\r\n      return obj;\r\n    },\r\n\r\n    iterateObjects: function(obj, observe) {\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (i)\r\n          obj = obj[this[i - 1]];\r\n        if (!isObject(obj))\r\n          return;\r\n        observe(obj, this[i]);\r\n      }\r\n    },\r\n\r\n    compiledGetValueFromFn: function() {\r\n      var str = '';\r\n      var pathString = 'obj';\r\n      str += 'if (obj != null';\r\n      var i = 0;\r\n      var key;\r\n      for (; i < (this.length - 1); i++) {\r\n        key = this[i];\r\n        pathString += isIdent(key) ? '.' + key : formatAccessor(key);\r\n        str += ' &&\\n     ' + pathString + ' != null';\r\n      }\r\n      str += ')\\n';\r\n\r\n      var key = this[i];\r\n      pathString += isIdent(key) ? '.' + key : formatAccessor(key);\r\n\r\n      str += '  return ' + pathString + ';\\nelse\\n  return undefined;';\r\n      return new Function('obj', str);\r\n    },\r\n\r\n    setValueFrom: function(obj, value) {\r\n      if (!this.length)\r\n        return false;\r\n\r\n      for (var i = 0; i < this.length - 1; i++) {\r\n        if (!isObject(obj))\r\n          return false;\r\n        obj = obj[this[i]];\r\n      }\r\n\r\n      if (!isObject(obj))\r\n        return false;\r\n\r\n      obj[this[i]] = value;\r\n      return true;\r\n    }\r\n  });\r\n\r\n  var invalidPath = new Path('', constructorIsPrivate);\r\n  invalidPath.valid = false;\r\n  invalidPath.getValueFrom = invalidPath.setValueFrom = function() {};\r\n\r\n  var MAX_DIRTY_CHECK_CYCLES = 1000;\r\n\r\n  function dirtyCheck(observer) {\r\n    var cycles = 0;\r\n    while (cycles < MAX_DIRTY_CHECK_CYCLES && observer.check_()) {\r\n      cycles++;\r\n    }\r\n    if (testingExposeCycleCount)\r\n      global.dirtyCheckCycleCount = cycles;\r\n\r\n    return cycles > 0;\r\n  }\r\n\r\n  function objectIsEmpty(object) {\r\n    for (var prop in object)\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  function diffIsEmpty(diff) {\r\n    return objectIsEmpty(diff.added) &&\r\n           objectIsEmpty(diff.removed) &&\r\n           objectIsEmpty(diff.changed);\r\n  }\r\n\r\n  function diffObjectFromOldObject(object, oldObject) {\r\n    var added = {};\r\n    var removed = {};\r\n    var changed = {};\r\n\r\n    for (var prop in oldObject) {\r\n      var newValue = object[prop];\r\n\r\n      if (newValue !== undefined && newValue === oldObject[prop])\r\n        continue;\r\n\r\n      if (!(prop in object)) {\r\n        removed[prop] = undefined;\r\n        continue;\r\n      }\r\n\r\n      if (newValue !== oldObject[prop])\r\n        changed[prop] = newValue;\r\n    }\r\n\r\n    for (var prop in object) {\r\n      if (prop in oldObject)\r\n        continue;\r\n\r\n      added[prop] = object[prop];\r\n    }\r\n\r\n    if (Array.isArray(object) && object.length !== oldObject.length)\r\n      changed.length = object.length;\r\n\r\n    return {\r\n      added: added,\r\n      removed: removed,\r\n      changed: changed\r\n    };\r\n  }\r\n\r\n  var eomTasks = [];\r\n  function runEOMTasks() {\r\n    if (!eomTasks.length)\r\n      return false;\r\n\r\n    for (var i = 0; i < eomTasks.length; i++) {\r\n      eomTasks[i]();\r\n    }\r\n    eomTasks.length = 0;\r\n    return true;\r\n  }\r\n\r\n  var runEOM = hasObserve ? (function(){\r\n    return function(fn) {\r\n      return Promise.resolve().then(fn);\r\n    }\r\n  })() :\r\n  (function() {\r\n    return function(fn) {\r\n      eomTasks.push(fn);\r\n    };\r\n  })();\r\n\r\n  var observedObjectCache = [];\r\n\r\n  function newObservedObject() {\r\n    var observer;\r\n    var object;\r\n    var discardRecords = false;\r\n    var first = true;\r\n\r\n    function callback(records) {\r\n      if (observer && observer.state_ === OPENED && !discardRecords)\r\n        observer.check_(records);\r\n    }\r\n\r\n    return {\r\n      open: function(obs) {\r\n        if (observer)\r\n          throw Error('ObservedObject in use');\r\n\r\n        if (!first)\r\n          Object.deliverChangeRecords(callback);\r\n\r\n        observer = obs;\r\n        first = false;\r\n      },\r\n      observe: function(obj, arrayObserve) {\r\n        object = obj;\r\n        if (arrayObserve)\r\n          Array.observe(object, callback);\r\n        else\r\n          Object.observe(object, callback);\r\n      },\r\n      deliver: function(discard) {\r\n        discardRecords = discard;\r\n        Object.deliverChangeRecords(callback);\r\n        discardRecords = false;\r\n      },\r\n      close: function() {\r\n        observer = undefined;\r\n        Object.unobserve(object, callback);\r\n        observedObjectCache.push(this);\r\n      }\r\n    };\r\n  }\r\n\r\n  /*\r\n   * The observedSet abstraction is a perf optimization which reduces the total\r\n   * number of Object.observe observations of a set of objects. The idea is that\r\n   * groups of Observers will have some object dependencies in common and this\r\n   * observed set ensures that each object in the transitive closure of\r\n   * dependencies is only observed once. The observedSet acts as a write barrier\r\n   * such that whenever any change comes through, all Observers are checked for\r\n   * changed values.\r\n   *\r\n   * Note that this optimization is explicitly moving work from setup-time to\r\n   * change-time.\r\n   *\r\n   * TODO(rafaelw): Implement \"garbage collection\". In order to move work off\r\n   * the critical path, when Observers are closed, their observed objects are\r\n   * not Object.unobserve(d). As a result, it's possible that if the observedSet\r\n   * is kept open, but some Observers have been closed, it could cause \"leaks\"\r\n   * (prevent otherwise collectable objects from being collected). At some\r\n   * point, we should implement incremental \"gc\" which keeps a list of\r\n   * observedSets which may need clean-up and does small amounts of cleanup on a\r\n   * timeout until all is clean.\r\n   */\r\n\r\n  function getObservedObject(observer, object, arrayObserve) {\r\n    var dir = observedObjectCache.pop() || newObservedObject();\r\n    dir.open(observer);\r\n    dir.observe(object, arrayObserve);\r\n    return dir;\r\n  }\r\n\r\n  var observedSetCache = [];\r\n\r\n  function newObservedSet() {\r\n    var observerCount = 0;\r\n    var observers = [];\r\n    var objects = [];\r\n    var rootObj;\r\n    var rootObjProps;\r\n\r\n    function observe(obj, prop) {\r\n      if (!obj)\r\n        return;\r\n\r\n      if (obj === rootObj)\r\n        rootObjProps[prop] = true;\r\n\r\n      if (objects.indexOf(obj) < 0) {\r\n        objects.push(obj);\r\n        Object.observe(obj, callback);\r\n      }\r\n\r\n      observe(Object.getPrototypeOf(obj), prop);\r\n    }\r\n\r\n    function allRootObjNonObservedProps(recs) {\r\n      for (var i = 0; i < recs.length; i++) {\r\n        var rec = recs[i];\r\n        if (rec.object !== rootObj ||\r\n            rootObjProps[rec.name] ||\r\n            rec.type === 'setPrototype') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    function callback(recs) {\r\n      if (allRootObjNonObservedProps(recs))\r\n        return;\r\n\r\n      var observer;\r\n      for (var i = 0; i < observers.length; i++) {\r\n        observer = observers[i];\r\n        if (observer.state_ == OPENED) {\r\n          observer.iterateObjects_(observe);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < observers.length; i++) {\r\n        observer = observers[i];\r\n        if (observer.state_ == OPENED) {\r\n          observer.check_();\r\n        }\r\n      }\r\n    }\r\n\r\n    var record = {\r\n      objects: objects,\r\n      get rootObject() { return rootObj; },\r\n      set rootObject(value) {\r\n        rootObj = value;\r\n        rootObjProps = {};\r\n      },\r\n      open: function(obs, object) {\r\n        observers.push(obs);\r\n        observerCount++;\r\n        obs.iterateObjects_(observe);\r\n      },\r\n      close: function(obs) {\r\n        observerCount--;\r\n        if (observerCount > 0) {\r\n          return;\r\n        }\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n          Object.unobserve(objects[i], callback);\r\n          Observer.unobservedCount++;\r\n        }\r\n\r\n        observers.length = 0;\r\n        objects.length = 0;\r\n        rootObj = undefined;\r\n        rootObjProps = undefined;\r\n        observedSetCache.push(this);\r\n        if (lastObservedSet === this)\r\n          lastObservedSet = null;\r\n      },\r\n    };\r\n\r\n    return record;\r\n  }\r\n\r\n  var lastObservedSet;\r\n\r\n  function getObservedSet(observer, obj) {\r\n    if (!lastObservedSet || lastObservedSet.rootObject !== obj) {\r\n      lastObservedSet = observedSetCache.pop() || newObservedSet();\r\n      lastObservedSet.rootObject = obj;\r\n    }\r\n    lastObservedSet.open(observer, obj);\r\n    return lastObservedSet;\r\n  }\r\n\r\n  var UNOPENED = 0;\r\n  var OPENED = 1;\r\n  var CLOSED = 2;\r\n  var RESETTING = 3;\r\n\r\n  var nextObserverId = 1;\r\n\r\n  function Observer() {\r\n    this.state_ = UNOPENED;\r\n    this.callback_ = undefined;\r\n    this.target_ = undefined; // TODO(rafaelw): Should be WeakRef\r\n    this.directObserver_ = undefined;\r\n    this.value_ = undefined;\r\n    this.id_ = nextObserverId++;\r\n  }\r\n\r\n  Observer.prototype = {\r\n    open: function(callback, target) {\r\n      if (this.state_ != UNOPENED)\r\n        throw Error('Observer has already been opened.');\r\n\r\n      addToAll(this);\r\n      this.callback_ = callback;\r\n      this.target_ = target;\r\n      this.connect_();\r\n      this.state_ = OPENED;\r\n      return this.value_;\r\n    },\r\n\r\n    close: function() {\r\n      if (this.state_ != OPENED)\r\n        return;\r\n\r\n      removeFromAll(this);\r\n      this.disconnect_();\r\n      this.value_ = undefined;\r\n      this.callback_ = undefined;\r\n      this.target_ = undefined;\r\n      this.state_ = CLOSED;\r\n    },\r\n\r\n    deliver: function() {\r\n      if (this.state_ != OPENED)\r\n        return;\r\n\r\n      dirtyCheck(this);\r\n    },\r\n\r\n    report_: function(changes) {\r\n      try {\r\n        this.callback_.apply(this.target_, changes);\r\n      } catch (ex) {\r\n        Observer._errorThrownDuringCallback = true;\r\n        console.error('Exception caught during observer callback: ' +\r\n                       (ex.stack || ex));\r\n      }\r\n    },\r\n\r\n    discardChanges: function() {\r\n      this.check_(undefined, true);\r\n      return this.value_;\r\n    }\r\n  }\r\n\r\n  var collectObservers = !hasObserve;\r\n  var allObservers;\r\n  Observer._allObserversCount = 0;\r\n\r\n  if (collectObservers) {\r\n    allObservers = [];\r\n  }\r\n\r\n  function addToAll(observer) {\r\n    Observer._allObserversCount++;\r\n    if (!collectObservers)\r\n      return;\r\n\r\n    allObservers.push(observer);\r\n  }\r\n\r\n  function removeFromAll(observer) {\r\n    Observer._allObserversCount--;\r\n  }\r\n\r\n  var runningMicrotaskCheckpoint = false;\r\n\r\n  global.Platform = global.Platform || {};\r\n\r\n  global.Platform.performMicrotaskCheckpoint = function() {\r\n    if (runningMicrotaskCheckpoint)\r\n      return;\r\n\r\n    if (!collectObservers)\r\n      return;\r\n\r\n    runningMicrotaskCheckpoint = true;\r\n\r\n    var cycles = 0;\r\n    var anyChanged, toCheck;\r\n\r\n    do {\r\n      cycles++;\r\n      toCheck = allObservers;\r\n      allObservers = [];\r\n      anyChanged = false;\r\n\r\n      for (var i = 0; i < toCheck.length; i++) {\r\n        var observer = toCheck[i];\r\n        if (observer.state_ != OPENED)\r\n          continue;\r\n\r\n        if (observer.check_())\r\n          anyChanged = true;\r\n\r\n        allObservers.push(observer);\r\n      }\r\n      if (runEOMTasks())\r\n        anyChanged = true;\r\n    } while (cycles < MAX_DIRTY_CHECK_CYCLES && anyChanged);\r\n\r\n    if (testingExposeCycleCount)\r\n      global.dirtyCheckCycleCount = cycles;\r\n\r\n    runningMicrotaskCheckpoint = false;\r\n  };\r\n\r\n  if (collectObservers) {\r\n    global.Platform.clearObservers = function() {\r\n      allObservers = [];\r\n    };\r\n  }\r\n\r\n  function ObjectObserver(object) {\r\n    Observer.call(this);\r\n    this.value_ = object;\r\n    this.oldObject_ = undefined;\r\n  }\r\n\r\n  ObjectObserver.prototype = createObject({\r\n    __proto__: Observer.prototype,\r\n\r\n    arrayObserve: false,\r\n\r\n    connect_: function(callback, target) {\r\n      if (hasObserve) {\r\n        this.directObserver_ = getObservedObject(this, this.value_,\r\n                                                 this.arrayObserve);\r\n      } else {\r\n        this.oldObject_ = this.copyObject(this.value_);\r\n      }\r\n\r\n    },\r\n\r\n    copyObject: function(object) {\r\n      var copy = Array.isArray(object) ? [] : {};\r\n      for (var prop in object) {\r\n        copy[prop] = object[prop];\r\n      };\r\n      if (Array.isArray(object))\r\n        copy.length = object.length;\r\n      return copy;\r\n    },\r\n\r\n    check_: function(changeRecords, skipChanges) {\r\n      var diff;\r\n      var oldValues;\r\n      if (hasObserve) {\r\n        if (!changeRecords)\r\n          return false;\r\n\r\n        oldValues = {};\r\n        diff = diffObjectFromChangeRecords(this.value_, changeRecords,\r\n                                           oldValues);\r\n      } else {\r\n        oldValues = this.oldObject_;\r\n        diff = diffObjectFromOldObject(this.value_, this.oldObject_);\r\n      }\r\n\r\n      if (diffIsEmpty(diff))\r\n        return false;\r\n\r\n      if (!hasObserve)\r\n        this.oldObject_ = this.copyObject(this.value_);\r\n\r\n      this.report_([\r\n        diff.added || {},\r\n        diff.removed || {},\r\n        diff.changed || {},\r\n        function(property) {\r\n          return oldValues[property];\r\n        }\r\n      ]);\r\n\r\n      return true;\r\n    },\r\n\r\n    disconnect_: function() {\r\n      if (hasObserve) {\r\n        this.directObserver_.close();\r\n        this.directObserver_ = undefined;\r\n      } else {\r\n        this.oldObject_ = undefined;\r\n      }\r\n    },\r\n\r\n    deliver: function() {\r\n      if (this.state_ != OPENED)\r\n        return;\r\n\r\n      if (hasObserve)\r\n        this.directObserver_.deliver(false);\r\n      else\r\n        dirtyCheck(this);\r\n    },\r\n\r\n    discardChanges: function() {\r\n      if (this.directObserver_)\r\n        this.directObserver_.deliver(true);\r\n      else\r\n        this.oldObject_ = this.copyObject(this.value_);\r\n\r\n      return this.value_;\r\n    }\r\n  });\r\n\r\n  function ArrayObserver(array) {\r\n    if (!Array.isArray(array))\r\n      throw Error('Provided object is not an Array');\r\n    ObjectObserver.call(this, array);\r\n  }\r\n\r\n  ArrayObserver.prototype = createObject({\r\n\r\n    __proto__: ObjectObserver.prototype,\r\n\r\n    arrayObserve: true,\r\n\r\n    copyObject: function(arr) {\r\n      return arr.slice();\r\n    },\r\n\r\n    check_: function(changeRecords) {\r\n      var splices;\r\n      if (hasObserve) {\r\n        if (!changeRecords)\r\n          return false;\r\n        splices = projectArraySplices(this.value_, changeRecords);\r\n      } else {\r\n        splices = calcSplices(this.value_, 0, this.value_.length,\r\n                              this.oldObject_, 0, this.oldObject_.length);\r\n      }\r\n\r\n      if (!splices || !splices.length)\r\n        return false;\r\n\r\n      if (!hasObserve)\r\n        this.oldObject_ = this.copyObject(this.value_);\r\n\r\n      this.report_([splices]);\r\n      return true;\r\n    }\r\n  });\r\n\r\n  ArrayObserver.applySplices = function(previous, current, splices) {\r\n    splices.forEach(function(splice) {\r\n      var spliceArgs = [splice.index, splice.removed.length];\r\n      var addIndex = splice.index;\r\n      while (addIndex < splice.index + splice.addedCount) {\r\n        spliceArgs.push(current[addIndex]);\r\n        addIndex++;\r\n      }\r\n\r\n      Array.prototype.splice.apply(previous, spliceArgs);\r\n    });\r\n  };\r\n\r\n  function PathObserver(object, path) {\r\n    Observer.call(this);\r\n\r\n    this.object_ = object;\r\n    this.path_ = getPath(path);\r\n    this.directObserver_ = undefined;\r\n  }\r\n\r\n  PathObserver.prototype = createObject({\r\n    __proto__: Observer.prototype,\r\n\r\n    get path() {\r\n      return this.path_;\r\n    },\r\n\r\n    connect_: function() {\r\n      if (hasObserve)\r\n        this.directObserver_ = getObservedSet(this, this.object_);\r\n\r\n      this.check_(undefined, true);\r\n    },\r\n\r\n    disconnect_: function() {\r\n      this.value_ = undefined;\r\n\r\n      if (this.directObserver_) {\r\n        this.directObserver_.close(this);\r\n        this.directObserver_ = undefined;\r\n      }\r\n    },\r\n\r\n    iterateObjects_: function(observe) {\r\n      this.path_.iterateObjects(this.object_, observe);\r\n    },\r\n\r\n    check_: function(changeRecords, skipChanges) {\r\n      var oldValue = this.value_;\r\n      this.value_ = this.path_.getValueFrom(this.object_);\r\n      if (skipChanges || areSameValue(this.value_, oldValue))\r\n        return false;\r\n\r\n      this.report_([this.value_, oldValue, this]);\r\n      return true;\r\n    },\r\n\r\n    setValue: function(newValue) {\r\n      if (this.path_)\r\n        this.path_.setValueFrom(this.object_, newValue);\r\n    }\r\n  });\r\n\r\n  function CompoundObserver(reportChangesOnOpen) {\r\n    Observer.call(this);\r\n\r\n    this.reportChangesOnOpen_ = reportChangesOnOpen;\r\n    this.value_ = [];\r\n    this.directObserver_ = undefined;\r\n    this.observed_ = [];\r\n  }\r\n\r\n  var observerSentinel = {};\r\n\r\n  CompoundObserver.prototype = createObject({\r\n    __proto__: Observer.prototype,\r\n\r\n    connect_: function() {\r\n      if (hasObserve) {\r\n        var object;\r\n        var needsDirectObserver = false;\r\n        for (var i = 0; i < this.observed_.length; i += 2) {\r\n          object = this.observed_[i]\r\n          if (object !== observerSentinel) {\r\n            needsDirectObserver = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (needsDirectObserver)\r\n          this.directObserver_ = getObservedSet(this, object);\r\n      }\r\n\r\n      this.check_(undefined, !this.reportChangesOnOpen_);\r\n    },\r\n\r\n    disconnect_: function() {\r\n      for (var i = 0; i < this.observed_.length; i += 2) {\r\n        if (this.observed_[i] === observerSentinel)\r\n          this.observed_[i + 1].close();\r\n      }\r\n      this.observed_.length = 0;\r\n      this.value_.length = 0;\r\n\r\n      if (this.directObserver_) {\r\n        this.directObserver_.close(this);\r\n        this.directObserver_ = undefined;\r\n      }\r\n    },\r\n\r\n    addPath: function(object, path) {\r\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\r\n        throw Error('Cannot add paths once started.');\r\n\r\n      var path = getPath(path);\r\n      this.observed_.push(object, path);\r\n      if (!this.reportChangesOnOpen_)\r\n        return;\r\n      var index = this.observed_.length / 2 - 1;\r\n      this.value_[index] = path.getValueFrom(object);\r\n    },\r\n\r\n    addObserver: function(observer) {\r\n      if (this.state_ != UNOPENED && this.state_ != RESETTING)\r\n        throw Error('Cannot add observers once started.');\r\n\r\n      this.observed_.push(observerSentinel, observer);\r\n      if (!this.reportChangesOnOpen_)\r\n        return;\r\n      var index = this.observed_.length / 2 - 1;\r\n      this.value_[index] = observer.open(this.deliver, this);\r\n    },\r\n\r\n    startReset: function() {\r\n      if (this.state_ != OPENED)\r\n        throw Error('Can only reset while open');\r\n\r\n      this.state_ = RESETTING;\r\n      this.disconnect_();\r\n    },\r\n\r\n    finishReset: function() {\r\n      if (this.state_ != RESETTING)\r\n        throw Error('Can only finishReset after startReset');\r\n      this.state_ = OPENED;\r\n      this.connect_();\r\n\r\n      return this.value_;\r\n    },\r\n\r\n    iterateObjects_: function(observe) {\r\n      var object;\r\n      for (var i = 0; i < this.observed_.length; i += 2) {\r\n        object = this.observed_[i]\r\n        if (object !== observerSentinel)\r\n          this.observed_[i + 1].iterateObjects(object, observe)\r\n      }\r\n    },\r\n\r\n    check_: function(changeRecords, skipChanges) {\r\n      var oldValues;\r\n      for (var i = 0; i < this.observed_.length; i += 2) {\r\n        var object = this.observed_[i];\r\n        var path = this.observed_[i+1];\r\n        var value;\r\n        if (object === observerSentinel) {\r\n          var observable = path;\r\n          value = this.state_ === UNOPENED ?\r\n              observable.open(this.deliver, this) :\r\n              observable.discardChanges();\r\n        } else {\r\n          value = path.getValueFrom(object);\r\n        }\r\n\r\n        if (skipChanges) {\r\n          this.value_[i / 2] = value;\r\n          continue;\r\n        }\r\n\r\n        if (areSameValue(value, this.value_[i / 2]))\r\n          continue;\r\n\r\n        oldValues = oldValues || [];\r\n        oldValues[i / 2] = this.value_[i / 2];\r\n        this.value_[i / 2] = value;\r\n      }\r\n\r\n      if (!oldValues)\r\n        return false;\r\n\r\n      // TODO(rafaelw): Having observed_ as the third callback arg here is\r\n      // pretty lame API. Fix.\r\n      this.report_([this.value_, oldValues, this.observed_]);\r\n      return true;\r\n    }\r\n  });\r\n\r\n  function identFn(value) { return value; }\r\n\r\n  function ObserverTransform(observable, getValueFn, setValueFn,\r\n                             dontPassThroughSet) {\r\n    this.callback_ = undefined;\r\n    this.target_ = undefined;\r\n    this.value_ = undefined;\r\n    this.observable_ = observable;\r\n    this.getValueFn_ = getValueFn || identFn;\r\n    this.setValueFn_ = setValueFn || identFn;\r\n    // TODO(rafaelw): This is a temporary hack. PolymerExpressions needs this\r\n    // at the moment because of a bug in it's dependency tracking.\r\n    this.dontPassThroughSet_ = dontPassThroughSet;\r\n  }\r\n\r\n  ObserverTransform.prototype = {\r\n    open: function(callback, target) {\r\n      this.callback_ = callback;\r\n      this.target_ = target;\r\n      this.value_ =\r\n          this.getValueFn_(this.observable_.open(this.observedCallback_, this));\r\n      return this.value_;\r\n    },\r\n\r\n    observedCallback_: function(value) {\r\n      value = this.getValueFn_(value);\r\n      if (areSameValue(value, this.value_))\r\n        return;\r\n      var oldValue = this.value_;\r\n      this.value_ = value;\r\n      this.callback_.call(this.target_, this.value_, oldValue);\r\n    },\r\n\r\n    discardChanges: function() {\r\n      this.value_ = this.getValueFn_(this.observable_.discardChanges());\r\n      return this.value_;\r\n    },\r\n\r\n    deliver: function() {\r\n      return this.observable_.deliver();\r\n    },\r\n\r\n    setValue: function(value) {\r\n      value = this.setValueFn_(value);\r\n      if (!this.dontPassThroughSet_ && this.observable_.setValue)\r\n        return this.observable_.setValue(value);\r\n    },\r\n\r\n    close: function() {\r\n      if (this.observable_)\r\n        this.observable_.close();\r\n      this.callback_ = undefined;\r\n      this.target_ = undefined;\r\n      this.observable_ = undefined;\r\n      this.value_ = undefined;\r\n      this.getValueFn_ = undefined;\r\n      this.setValueFn_ = undefined;\r\n    }\r\n  }\r\n\r\n  var expectedRecordTypes = {\r\n    add: true,\r\n    update: true,\r\n    delete: true\r\n  };\r\n\r\n  function diffObjectFromChangeRecords(object, changeRecords, oldValues) {\r\n    var added = {};\r\n    var removed = {};\r\n\r\n    for (var i = 0; i < changeRecords.length; i++) {\r\n      var record = changeRecords[i];\r\n      if (!expectedRecordTypes[record.type]) {\r\n        console.error('Unknown changeRecord type: ' + record.type);\r\n        console.error(record);\r\n        continue;\r\n      }\r\n\r\n      if (!(record.name in oldValues))\r\n        oldValues[record.name] = record.oldValue;\r\n\r\n      if (record.type == 'update')\r\n        continue;\r\n\r\n      if (record.type == 'add') {\r\n        if (record.name in removed)\r\n          delete removed[record.name];\r\n        else\r\n          added[record.name] = true;\r\n\r\n        continue;\r\n      }\r\n\r\n      // type = 'delete'\r\n      if (record.name in added) {\r\n        delete added[record.name];\r\n        delete oldValues[record.name];\r\n      } else {\r\n        removed[record.name] = true;\r\n      }\r\n    }\r\n\r\n    for (var prop in added)\r\n      added[prop] = object[prop];\r\n\r\n    for (var prop in removed)\r\n      removed[prop] = undefined;\r\n\r\n    var changed = {};\r\n    for (var prop in oldValues) {\r\n      if (prop in added || prop in removed)\r\n        continue;\r\n\r\n      var newValue = object[prop];\r\n      if (oldValues[prop] !== newValue)\r\n        changed[prop] = newValue;\r\n    }\r\n\r\n    return {\r\n      added: added,\r\n      removed: removed,\r\n      changed: changed\r\n    };\r\n  }\r\n\r\n  function newSplice(index, removed, addedCount) {\r\n    return {\r\n      index: index,\r\n      removed: removed,\r\n      addedCount: addedCount\r\n    };\r\n  }\r\n\r\n  var EDIT_LEAVE = 0;\r\n  var EDIT_UPDATE = 1;\r\n  var EDIT_ADD = 2;\r\n  var EDIT_DELETE = 3;\r\n\r\n  function ArraySplice() {}\r\n\r\n  ArraySplice.prototype = {\r\n\r\n    // Note: This function is *based* on the computation of the Levenshtein\r\n    // \"edit\" distance. The one change is that \"updates\" are treated as two\r\n    // edits - not one. With Array splices, an update is really a delete\r\n    // followed by an add. By retaining this, we optimize for \"keeping\" the\r\n    // maximum array items in the original array. For example:\r\n    //\r\n    //   'xxxx123' -> '123yyyy'\r\n    //\r\n    // With 1-edit updates, the shortest path would be just to update all seven\r\n    // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\r\n    // leaves the substring '123' intact.\r\n    calcEditDistances: function(current, currentStart, currentEnd,\r\n                                old, oldStart, oldEnd) {\r\n      // \"Deletion\" columns\r\n      var rowCount = oldEnd - oldStart + 1;\r\n      var columnCount = currentEnd - currentStart + 1;\r\n      var distances = new Array(rowCount);\r\n\r\n      // \"Addition\" rows. Initialize null column.\r\n      for (var i = 0; i < rowCount; i++) {\r\n        distances[i] = new Array(columnCount);\r\n        distances[i][0] = i;\r\n      }\r\n\r\n      // Initialize null row\r\n      for (var j = 0; j < columnCount; j++)\r\n        distances[0][j] = j;\r\n\r\n      for (var i = 1; i < rowCount; i++) {\r\n        for (var j = 1; j < columnCount; j++) {\r\n          if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\r\n            distances[i][j] = distances[i - 1][j - 1];\r\n          else {\r\n            var north = distances[i - 1][j] + 1;\r\n            var west = distances[i][j - 1] + 1;\r\n            distances[i][j] = north < west ? north : west;\r\n          }\r\n        }\r\n      }\r\n\r\n      return distances;\r\n    },\r\n\r\n    // This starts at the final weight, and walks \"backward\" by finding\r\n    // the minimum previous weight recursively until the origin of the weight\r\n    // matrix.\r\n    spliceOperationsFromEditDistances: function(distances) {\r\n      var i = distances.length - 1;\r\n      var j = distances[0].length - 1;\r\n      var current = distances[i][j];\r\n      var edits = [];\r\n      while (i > 0 || j > 0) {\r\n        if (i == 0) {\r\n          edits.push(EDIT_ADD);\r\n          j--;\r\n          continue;\r\n        }\r\n        if (j == 0) {\r\n          edits.push(EDIT_DELETE);\r\n          i--;\r\n          continue;\r\n        }\r\n        var northWest = distances[i - 1][j - 1];\r\n        var west = distances[i - 1][j];\r\n        var north = distances[i][j - 1];\r\n\r\n        var min;\r\n        if (west < north)\r\n          min = west < northWest ? west : northWest;\r\n        else\r\n          min = north < northWest ? north : northWest;\r\n\r\n        if (min == northWest) {\r\n          if (northWest == current) {\r\n            edits.push(EDIT_LEAVE);\r\n          } else {\r\n            edits.push(EDIT_UPDATE);\r\n            current = northWest;\r\n          }\r\n          i--;\r\n          j--;\r\n        } else if (min == west) {\r\n          edits.push(EDIT_DELETE);\r\n          i--;\r\n          current = west;\r\n        } else {\r\n          edits.push(EDIT_ADD);\r\n          j--;\r\n          current = north;\r\n        }\r\n      }\r\n\r\n      edits.reverse();\r\n      return edits;\r\n    },\r\n\r\n    /**\r\n     * Splice Projection functions:\r\n     *\r\n     * A splice map is a representation of how a previous array of items\r\n     * was transformed into a new array of items. Conceptually it is a list of\r\n     * tuples of\r\n     *\r\n     *   <index, removed, addedCount>\r\n     *\r\n     * which are kept in ascending index order of. The tuple represents that at\r\n     * the |index|, |removed| sequence of items were removed, and counting forward\r\n     * from |index|, |addedCount| items were added.\r\n     */\r\n\r\n    /**\r\n     * Lacking individual splice mutation information, the minimal set of\r\n     * splices can be synthesized given the previous state and final state of an\r\n     * array. The basic approach is to calculate the edit distance matrix and\r\n     * choose the shortest path through it.\r\n     *\r\n     * Complexity: O(l * p)\r\n     *   l: The length of the current array\r\n     *   p: The length of the old array\r\n     */\r\n    calcSplices: function(current, currentStart, currentEnd,\r\n                          old, oldStart, oldEnd) {\r\n      var prefixCount = 0;\r\n      var suffixCount = 0;\r\n\r\n      var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\r\n      if (currentStart == 0 && oldStart == 0)\r\n        prefixCount = this.sharedPrefix(current, old, minLength);\r\n\r\n      if (currentEnd == current.length && oldEnd == old.length)\r\n        suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\r\n\r\n      currentStart += prefixCount;\r\n      oldStart += prefixCount;\r\n      currentEnd -= suffixCount;\r\n      oldEnd -= suffixCount;\r\n\r\n      if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\r\n        return [];\r\n\r\n      if (currentStart == currentEnd) {\r\n        var splice = newSplice(currentStart, [], 0);\r\n        while (oldStart < oldEnd)\r\n          splice.removed.push(old[oldStart++]);\r\n\r\n        return [ splice ];\r\n      } else if (oldStart == oldEnd)\r\n        return [ newSplice(currentStart, [], currentEnd - currentStart) ];\r\n\r\n      var ops = this.spliceOperationsFromEditDistances(\r\n          this.calcEditDistances(current, currentStart, currentEnd,\r\n                                 old, oldStart, oldEnd));\r\n\r\n      var splice = undefined;\r\n      var splices = [];\r\n      var index = currentStart;\r\n      var oldIndex = oldStart;\r\n      for (var i = 0; i < ops.length; i++) {\r\n        switch(ops[i]) {\r\n          case EDIT_LEAVE:\r\n            if (splice) {\r\n              splices.push(splice);\r\n              splice = undefined;\r\n            }\r\n\r\n            index++;\r\n            oldIndex++;\r\n            break;\r\n          case EDIT_UPDATE:\r\n            if (!splice)\r\n              splice = newSplice(index, [], 0);\r\n\r\n            splice.addedCount++;\r\n            index++;\r\n\r\n            splice.removed.push(old[oldIndex]);\r\n            oldIndex++;\r\n            break;\r\n          case EDIT_ADD:\r\n            if (!splice)\r\n              splice = newSplice(index, [], 0);\r\n\r\n            splice.addedCount++;\r\n            index++;\r\n            break;\r\n          case EDIT_DELETE:\r\n            if (!splice)\r\n              splice = newSplice(index, [], 0);\r\n\r\n            splice.removed.push(old[oldIndex]);\r\n            oldIndex++;\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (splice) {\r\n        splices.push(splice);\r\n      }\r\n      return splices;\r\n    },\r\n\r\n    sharedPrefix: function(current, old, searchLength) {\r\n      for (var i = 0; i < searchLength; i++)\r\n        if (!this.equals(current[i], old[i]))\r\n          return i;\r\n      return searchLength;\r\n    },\r\n\r\n    sharedSuffix: function(current, old, searchLength) {\r\n      var index1 = current.length;\r\n      var index2 = old.length;\r\n      var count = 0;\r\n      while (count < searchLength && this.equals(current[--index1], old[--index2]))\r\n        count++;\r\n\r\n      return count;\r\n    },\r\n\r\n    calculateSplices: function(current, previous) {\r\n      return this.calcSplices(current, 0, current.length, previous, 0,\r\n                              previous.length);\r\n    },\r\n\r\n    equals: function(currentValue, previousValue) {\r\n      return currentValue === previousValue;\r\n    }\r\n  };\r\n\r\n  var arraySplice = new ArraySplice();\r\n\r\n  function calcSplices(current, currentStart, currentEnd,\r\n                       old, oldStart, oldEnd) {\r\n    return arraySplice.calcSplices(current, currentStart, currentEnd,\r\n                                   old, oldStart, oldEnd);\r\n  }\r\n\r\n  function intersect(start1, end1, start2, end2) {\r\n    // Disjoint\r\n    if (end1 < start2 || end2 < start1)\r\n      return -1;\r\n\r\n    // Adjacent\r\n    if (end1 == start2 || end2 == start1)\r\n      return 0;\r\n\r\n    // Non-zero intersect, span1 first\r\n    if (start1 < start2) {\r\n      if (end1 < end2)\r\n        return end1 - start2; // Overlap\r\n      else\r\n        return end2 - start2; // Contained\r\n    } else {\r\n      // Non-zero intersect, span2 first\r\n      if (end2 < end1)\r\n        return end2 - start1; // Overlap\r\n      else\r\n        return end1 - start1; // Contained\r\n    }\r\n  }\r\n\r\n  function mergeSplice(splices, index, removed, addedCount) {\r\n\r\n    var splice = newSplice(index, removed, addedCount);\r\n\r\n    var inserted = false;\r\n    var insertionOffset = 0;\r\n\r\n    for (var i = 0; i < splices.length; i++) {\r\n      var current = splices[i];\r\n      current.index += insertionOffset;\r\n\r\n      if (inserted)\r\n        continue;\r\n\r\n      var intersectCount = intersect(splice.index,\r\n                                     splice.index + splice.removed.length,\r\n                                     current.index,\r\n                                     current.index + current.addedCount);\r\n\r\n      if (intersectCount >= 0) {\r\n        // Merge the two splices\r\n\r\n        splices.splice(i, 1);\r\n        i--;\r\n\r\n        insertionOffset -= current.addedCount - current.removed.length;\r\n\r\n        splice.addedCount += current.addedCount - intersectCount;\r\n        var deleteCount = splice.removed.length +\r\n                          current.removed.length - intersectCount;\r\n\r\n        if (!splice.addedCount && !deleteCount) {\r\n          // merged splice is a noop. discard.\r\n          inserted = true;\r\n        } else {\r\n          var removed = current.removed;\r\n\r\n          if (splice.index < current.index) {\r\n            // some prefix of splice.removed is prepended to current.removed.\r\n            var prepend = splice.removed.slice(0, current.index - splice.index);\r\n            Array.prototype.push.apply(prepend, removed);\r\n            removed = prepend;\r\n          }\r\n\r\n          if (splice.index + splice.removed.length > current.index + current.addedCount) {\r\n            // some suffix of splice.removed is appended to current.removed.\r\n            var append = splice.removed.slice(current.index + current.addedCount - splice.index);\r\n            Array.prototype.push.apply(removed, append);\r\n          }\r\n\r\n          splice.removed = removed;\r\n          if (current.index < splice.index) {\r\n            splice.index = current.index;\r\n          }\r\n        }\r\n      } else if (splice.index < current.index) {\r\n        // Insert splice here.\r\n\r\n        inserted = true;\r\n\r\n        splices.splice(i, 0, splice);\r\n        i++;\r\n\r\n        var offset = splice.addedCount - splice.removed.length\r\n        current.index += offset;\r\n        insertionOffset += offset;\r\n      }\r\n    }\r\n\r\n    if (!inserted)\r\n      splices.push(splice);\r\n  }\r\n\r\n  function createInitialSplices(array, changeRecords) {\r\n    var splices = [];\r\n\r\n    for (var i = 0; i < changeRecords.length; i++) {\r\n      var record = changeRecords[i];\r\n      switch(record.type) {\r\n        case 'splice':\r\n          mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);\r\n          break;\r\n        case 'add':\r\n        case 'update':\r\n        case 'delete':\r\n          if (!isIndex(record.name))\r\n            continue;\r\n          var index = toNumber(record.name);\r\n          if (index < 0)\r\n            continue;\r\n          mergeSplice(splices, index, [record.oldValue], 1);\r\n          break;\r\n        default:\r\n          console.error('Unexpected record type: ' + JSON.stringify(record));\r\n          break;\r\n      }\r\n    }\r\n\r\n    return splices;\r\n  }\r\n\r\n  function projectArraySplices(array, changeRecords) {\r\n    var splices = [];\r\n\r\n    createInitialSplices(array, changeRecords).forEach(function(splice) {\r\n      if (splice.addedCount == 1 && splice.removed.length == 1) {\r\n        if (splice.removed[0] !== array[splice.index])\r\n          splices.push(splice);\r\n\r\n        return\r\n      };\r\n\r\n      splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount,\r\n                                           splice.removed, 0, splice.removed.length));\r\n    });\r\n\r\n    return splices;\r\n  }\r\n\r\n  // Export the observe-js object for **Node.js**, with backwards-compatibility\r\n  // for the old `require()` API. Also ensure `exports` is not a DOM Element.\r\n  // If we're in the browser, export as a global object.\r\n\r\n  var expose = global;\r\n\r\n  if (typeof exports !== 'undefined' && !exports.nodeType) {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n      exports = module.exports;\r\n    }\r\n    expose = exports;\r\n  }\r\n\r\n  expose.Observer = Observer;\r\n  expose.Observer.runEOM_ = runEOM;\r\n  expose.Observer.observerSentinel_ = observerSentinel; // for testing.\r\n  expose.Observer.hasObjectObserve = hasObserve;\r\n  expose.ArrayObserver = ArrayObserver;\r\n  expose.ArrayObserver.calculateSplices = function(current, previous) {\r\n    return arraySplice.calculateSplices(current, previous);\r\n  };\r\n\r\n  expose.ArraySplice = ArraySplice;\r\n  expose.ObjectObserver = ObjectObserver;\r\n  expose.PathObserver = PathObserver;\r\n  expose.CompoundObserver = CompoundObserver;\r\n  expose.Path = Path;\r\n  expose.ObserverTransform = ObserverTransform;\r\n  \r\n})(typeof global !== 'undefined' && global && typeof module !== 'undefined' && module ? global : this || window);\r\n"]}